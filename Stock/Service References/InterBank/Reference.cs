//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace Supervisor.InterBank {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InterBank.IInterBankOps", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IInterBankOps {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/PurchaseStock", ReplyAction="http://tempuri.org/IInterBankOps/PurchaseStockResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        void PurchaseStock(string company, int quantity, string username, string email, System.DateTime request_date_time, string execution_value, string order_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/PurchaseStock", ReplyAction="http://tempuri.org/IInterBankOps/PurchaseStockResponse")]
        System.Threading.Tasks.Task PurchaseStockAsync(string company, int quantity, string username, string email, System.DateTime request_date_time, string execution_value, string order_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/GetCompanies", ReplyAction="http://tempuri.org/IInterBankOps/GetCompaniesResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        string[] GetCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/GetCompanies", ReplyAction="http://tempuri.org/IInterBankOps/GetCompaniesResponse")]
        System.Threading.Tasks.Task<string[]> GetCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/GetOrders", ReplyAction="http://tempuri.org/IInterBankOps/GetOrdersResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        string[][] GetOrders(string client_name, string client_mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/GetOrders", ReplyAction="http://tempuri.org/IInterBankOps/GetOrdersResponse")]
        System.Threading.Tasks.Task<string[][]> GetOrdersAsync(string client_name, string client_mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/UpdateOrder", ReplyAction="http://tempuri.org/IInterBankOps/UpdateOrderResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        void UpdateOrder(int client_id, int order_id, System.DateTime execution_date, string execution_status, string execution_value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterBankOps/UpdateOrder", ReplyAction="http://tempuri.org/IInterBankOps/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(int client_id, int order_id, System.DateTime execution_date, string execution_status, string execution_value);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IInterBankOps/StockSubscribe", ReplyAction = "http://tempuri.org/IInterBankOps/StockSubscribeResponse")]
        void StockSubscribe();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IInterBankOps/StockUnsubscribe", ReplyAction = "http://tempuri.org/IInterBankOps/StockUnsubscribeResponse")]
        void StockUnsubscribe();

    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInterBankOpsChannel : Supervisor.InterBank.IInterBankOps, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InterBankOpsClient : System.ServiceModel.ClientBase<Supervisor.InterBank.IInterBankOps>, IInterBankOps
    {
        
        public InterBankOpsClient() {
        }
        
        public InterBankOpsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InterBankOpsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterBankOpsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterBankOpsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PurchaseStock(string company, int quantity, string username, string email, System.DateTime request_date_time, string execution_value, string order_type) {
            base.Channel.PurchaseStock(company, quantity, username, email, request_date_time, execution_value, order_type);
        }
        
        public System.Threading.Tasks.Task PurchaseStockAsync(string company, int quantity, string username, string email, System.DateTime request_date_time, string execution_value, string order_type) {
            return base.Channel.PurchaseStockAsync(company, quantity, username, email, request_date_time, execution_value, order_type);
        }
        
        public string[] GetCompanies() {
            return base.Channel.GetCompanies();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCompaniesAsync() {
            return base.Channel.GetCompaniesAsync();
        }
        
        public string[][] GetOrders(string client_name, string client_mail) {
            return base.Channel.GetOrders(client_name, client_mail);
        }
        
        public System.Threading.Tasks.Task<string[][]> GetOrdersAsync(string client_name, string client_mail) {
            return base.Channel.GetOrdersAsync(client_name, client_mail);
        }
        
        public void UpdateOrder(int client_id, int order_id, System.DateTime execution_date, string execution_status, string execution_value) {
            base.Channel.UpdateOrder(client_id, order_id, execution_date, execution_status, execution_value);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(int client_id, int order_id, System.DateTime execution_date, string execution_status, string execution_value) {
            return base.Channel.UpdateOrderAsync(client_id, order_id, execution_date, execution_status, execution_value);
        }

        public void StockSubscribe()
        {
            base.Channel.StockSubscribe();
        }

        public void StockUnsubscribe()
        {
            base.Channel.StockUnsubscribe();
        }
    }
}
